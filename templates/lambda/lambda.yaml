AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS Lambda function for loading parquet files to Google BigQuery

Parameters:
  GcpServiceAccountSecretsArn:
    Type: String
  S3Stack:
    Type: String
    Default: cdc-rds-bq-s3

Resources:
  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
  FunctionLoadParquetToBigQuery:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: load_parquet_to_bigquery
      PackageType: Image
      MemorySize: 256
      Timeout: 60
      Role: !GetAtt RoleFunctionLoadParquetToBigQuery.Arn
      Environment:
        Variables:
          GCP_SA_SECRET_NAME: cdc-rds-bq-lambda
      Events:
        EventBridge:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.s3
              detail-type:
                - Object Created
              detail:
                bucket:
                  name:
                    - Fn::ImportValue: !Sub ${S3Stack}-S3BucketName
                object:
                  key:
                    - prefix: mysqlslap/
      DeadLetterQueue:
        TargetArn: !GetAtt DeadLetterQueue.Arn
        Type: SQS
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./load_parquet_to_bigquery
      DockerTag: latest

  RoleFunctionLoadParquetToBigQuery:
    Type: AWS::IAM::Role
    Properties:
      RoleName: role_function_load_pq_to_bq
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: GetGcpServiceAccount
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Ref GcpServiceAccountSecretsArn
        - PolicyName: SendDeadLetterQueue
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:ReceiveMessage
                Resource:
                  - !GetAtt DeadLetterQueue.Arn
        - PolicyName: GetS3CdcObjects
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: !Sub
                  - arn:aws:s3:::${S3Bucket}
                  - S3Bucket:
                      Fn::ImportValue: !Sub ${S3Stack}-S3BucketName
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub
                  - arn:aws:s3:::${S3Bucket}/*
                  - S3Bucket:
                      Fn::ImportValue: !Sub ${S3Stack}-S3BucketName

  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: load_pq_to_bq_errors
      MessageRetentionPeriod: 345600
      VisibilityTimeout: 60

  DeadLetterQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Id: !Ref DeadLetterQueue
        Statement:
          - Sid: DeadLetterQueuePolicy
            Effect: Allow
            Principal: "*"
            Action: SQS:*
            Resource: !GetAtt DeadLetterQueue.Arn
      Queues:
        - !Ref DeadLetterQueue
